version: "3.9"

name: pyoj

services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    restart: unless-stopped
    environment:
      - POSTGRES_URI=postgresql+psycopg://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE}
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379/0
      - RABBITMQ_URI=amqp://rabbitmq:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      - SESSION_KEY=${SESSION_KEY}
    expose:
      - 8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging:
      driver: local
  worker:
    container_name: worker
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    cgroup_parent: pyoj.slice
    privileged: true
    # volumes:
    #   - /sys/fs/cgroup/pyoj.slice:/sys/fs/cgroup:rw
    restart: unless-stopped
    environment:
      - POSTGRES_URI=postgresql+psycopg://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE}
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379/0
      - RABBITMQ_URI=amqp://rabbitmq:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      - SESSION_KEY=${SESSION_KEY}
    cap_add:
      - SYS_ADMIN
    healthcheck:
      test: ["CMD-SHELL", "poetry", "run", "celery", "-A", "worker.celery_app", "inspect", "ping", "-d", "celery@$$HOSTNAME"]
      interval: 5s
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    logging:
      driver: local
  postgres:
    image: postgres:16-alpine3.19
    container_name: postgres
    restart: unless-stopped
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "--dbname", "${POSTGRES_DATABASE}", "--username", "postgres", "-q"]
      interval: 5s
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: local
  rabbitmq:
    image: rabbitmq:3.12-alpine
    container_name: rabbitmq
    restart: unless-stopped
    expose:
      - 5672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    logging:
      driver: local
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    command: /bin/sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    expose:
      - 6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 5s
    volumes:
      - redis_data:/data
    logging:
      driver: local
  caddy:
    image: caddy:2.7-alpine
    container_name: caddy
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  rabbitmq_log:
  caddy_data:
  caddy_config: