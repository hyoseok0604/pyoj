name: CI

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  lint_format_test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5672:5672
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry==1.7.1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'poetry'
      - name: Install Dependency
        run: poetry install --no-interaction --no-root
      - name: Lint with ruff
        run: poetry run ruff check --output-format=github .
      - name: Format with ruff
        run: poetry run ruff format --check .
      - name: Type checking with pyright
        run: poetry run pyright .
      - name: Test with pytest
        env:
          PYTHONPATH: ${{ github.workspace }}
          POSTGRES_URI: postgresql+psycopg://postgres:postgres@localhost:5432/postgres
          REDIS_URI: redis://localhost:6379/0
          RABBITMQ_URI: amqp://guest:guest@localhost:5672/
          SESSION_KEY: key
        run: poetry run pytest --junitxml=junit/test-results.xml
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: junit/test-results.xml
        if: ${{ always() }}